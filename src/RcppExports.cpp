// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// leapfrogCpp
NumericVector leapfrogCpp(Function gradient, NumericMatrix ys, NumericVector qp, double stepSize);
RcppExport SEXP _jonnylaw_leapfrogCpp(SEXP gradientSEXP, SEXP ysSEXP, SEXP qpSEXP, SEXP stepSizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Function >::type gradient(gradientSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type ys(ysSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type qp(qpSEXP);
    Rcpp::traits::input_parameter< double >::type stepSize(stepSizeSEXP);
    rcpp_result_gen = Rcpp::wrap(leapfrogCpp(gradient, ys, qp, stepSize));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_jonnylaw_leapfrogCpp", (DL_FUNC) &_jonnylaw_leapfrogCpp, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_jonnylaw(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
